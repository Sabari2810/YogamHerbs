generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model BuildVersion {
  SystemInformationID Int      @id(map: "PK__BuildVer__35E58ECA15A25E0F") @default(autoincrement()) @db.TinyInt
  Database_Version    String   @map("Database Version") @db.NVarChar(25)
  VersionDate         DateTime @db.DateTime
  ModifiedDate        DateTime @default(now(), map: "DF_BuildVersion_ModifiedDate") @db.DateTime
}

model CategoryMaster {
  id                  Int                   @id(map: "PK__Category__3213E83F089423C5") @default(autoincrement())
  guid                String?               @default(dbgenerated("newid()"), map: "DF__CategoryMa__guid__0C50D423") @db.UniqueIdentifier
  title               String                @db.VarChar(150)
  created_by          String                @db.Char(50)
  modified_by         String?               @db.Char(50)
  created_date        DateTime?             @default(dbgenerated("getutcdate()"), map: "DF__CategoryM__creat__0D44F85C") @db.DateTime
  updated_date        DateTime?             @db.DateTime
  ProductCategoryLink ProductCategoryLink[]
}

model DiscountMaster {
  id              Int               @id(map: "PK__Discount__3213E83FF512042B") @default(autoincrement())
  guid            String?           @default(dbgenerated("newid()"), map: "DF__DiscountMa__guid__10216507") @db.UniqueIdentifier
  discount_type   String            @db.Char(1)
  value           Int
  eff_from        DateTime          @db.DateTime
  eff_to          DateTime          @db.DateTime
  used            Boolean?
  created_by      String            @db.Char(50)
  modified_by     String?           @db.Char(50)
  created_date    DateTime?         @default(dbgenerated("getutcdate()"), map: "DF__DiscountM__creat__11158940") @db.DateTime
  updated_date    DateTime?         @db.DateTime
  ProductVariants ProductVariants[]
}

model ErrorLog {
  ErrorLogID     Int      @id(map: "PK_ErrorLog_ErrorLogID") @default(autoincrement())
  ErrorTime      DateTime @default(now(), map: "DF_ErrorLog_ErrorTime") @db.DateTime
  UserName       String   @db.NVarChar(128)
  ErrorNumber    Int
  ErrorSeverity  Int?
  ErrorState     Int?
  ErrorProcedure String?  @db.NVarChar(126)
  ErrorLine      Int?
  ErrorMessage   String   @db.NVarChar(4000)
}

model ProductCategoryLink {
  id             Int            @id(map: "PK__ProductC__3213E83F5C9C8C9E") @default(autoincrement())
  guid           String?        @default(dbgenerated("newid()"), map: "DF__ProductCat__guid__13F1F5EB") @db.UniqueIdentifier
  product_id     Int
  category_id    Int
  created_by     String         @db.Char(50)
  modified_by    String?        @db.Char(50)
  created_date   DateTime?      @default(dbgenerated("getutcdate()"), map: "DF__ProductCa__creat__14E61A24") @db.DateTime
  updated_date   DateTime?      @db.DateTime
  CategoryMaster CategoryMaster @relation(fields: [category_id], references: [id], onUpdate: NoAction, map: "FK__ProductCa__categ__16CE6296")
  ProductMaster  ProductMaster  @relation(fields: [product_id], references: [id], onUpdate: NoAction, map: "FK__ProductCa__produ__15DA3E5D")
}

model ProductMaster {
  id                  Int                   @id(map: "PK__ProductM__3213E83F19E24E8F") @default(autoincrement())
  guid                String?               @default(dbgenerated("newid()"), map: "DF__ProductMas__guid__0880433F") @db.UniqueIdentifier
  title               String                @db.VarChar(150)
  description         String                @db.VarChar(500)
  created_by          String                @db.Char(50)
  modified_by         String?               @db.Char(50)
  created_date        DateTime?             @default(dbgenerated("getutcdate()"), map: "DF__ProductMa__creat__09746778") @db.DateTime
  updated_date        DateTime?             @db.DateTime
  ProductCategoryLink ProductCategoryLink[]
  ProductVariants     ProductVariants[]
}

model ProductVariants {
  id             Int             @id(map: "PK__ProductV__3213E83F743160B1") @default(autoincrement())
  product_id     Int
  guid           String?         @default(dbgenerated("newid()"), map: "DF__ProductVar__guid__19AACF41") @db.UniqueIdentifier
  description    String          @db.VarChar(500)
  unit           String          @db.Char(10)
  volume         Int
  in_stocks      Int
  price          Decimal         @db.Decimal(18, 2)
  is_default     Boolean?
  discount_id    Int?
  created_by     String          @db.Char(50)
  modified_by    String?         @db.Char(50)
  created_date   DateTime?       @default(dbgenerated("getutcdate()"), map: "DF__ProductVa__creat__1A9EF37A") @db.DateTime
  updated_date   DateTime?       @db.DateTime
  Cart           Cart[]
  DiscountMaster DiscountMaster? @relation(fields: [discount_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ProductVa__disco__1C873BEC")
  ProductMaster  ProductMaster   @relation(fields: [product_id], references: [id], onUpdate: NoAction, map: "FK__ProductVa__produ__1B9317B3")
}

model Cart {
  id                 Int             @id(map: "PK__Cart__3213E83FC7C17A61") @default(autoincrement())
  guid               String?         @default(dbgenerated("newid()"), map: "DF__Cart__guid__39237A9A") @db.UniqueIdentifier
  session_id         String          @db.VarChar(150)
  product_variant_id Int
  quantity           Int             @db.SmallInt
  created_date       DateTime?       @default(dbgenerated("getutcdate()"), map: "DF__Cart__created_da__3A179ED3") @db.DateTime
  updated_date       DateTime?       @db.DateTime
  ProductVariants    ProductVariants @relation(fields: [product_variant_id], references: [id], onUpdate: NoAction, map: "FK__Cart__product_va__3B0BC30C")

  @@unique([session_id, product_variant_id], map: "unq_Cart_product_variant_id_session_id")
}

model Customer {
  id                     Int                      @id(map: "PK__Customer__3213E83F0C7C932F") @default(autoincrement())
  guid                   String?                  @default(dbgenerated("newid()"), map: "DF__Customer__guid__2F9A1060") @db.UniqueIdentifier
  first_name             String                   @db.VarChar(50)
  last_name              String?                  @db.VarChar(50)
  email                  String?                  @db.VarChar(150)
  mobile_number          String                   @db.VarChar(10)
  created_date           DateTime?                @default(dbgenerated("getutcdate()"), map: "DF__Customer__create__308E3499") @db.DateTime
  updated_date           DateTime?                @db.DateTime
  CustomerAddressDetails CustomerAddressDetails[]
}

model CustomerAddressDetails {
  id           Int       @id(map: "PK__Customer__3213E83F5C3A5E7E") @default(autoincrement())
  guid         String?   @default(dbgenerated("newid()"), map: "DF__CustomerAd__guid__336AA144") @db.UniqueIdentifier
  customer_id  Int
  address_name String    @db.VarChar(100)
  address_1    String    @db.VarChar(200)
  address_2    String    @db.VarChar(200)
  city         String    @db.VarChar(100)
  state        String    @db.VarChar(100)
  pincode      Int
  created_date DateTime? @default(dbgenerated("getutcdate()"), map: "DF__CustomerA__creat__345EC57D") @db.DateTime
  updated_date DateTime? @db.DateTime
  Customer     Customer  @relation(fields: [customer_id], references: [id], onUpdate: NoAction, map: "FK__CustomerA__custo__3552E9B6")
}
